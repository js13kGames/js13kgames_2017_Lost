!function(e){function t(n){if(i[n])return i[n].exports;var r=i[n]={exports:{},id:n,loaded:!1};return e[n].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var i={};t.m=e,t.c=i,t.p="",t(0)}([function(e,t,i){i(3),i(1);const n=i(2);AFRAME.registerComponent("game",{init:function(){this.mapContext=n.go(64,8);let e=document.createElement("a-entity"),t=this.mapContext.getImageData(0,0,64,64);for(let i=0;i<64;i++)for(let n=0;n<64;n++)if(0!=t.data[4*(i+64*n)]){let t=document.createElement("a-entity");Math.random()>.5&&t.setAttribute("material-texture","src: #my-texture;index:0"),t.setAttribute("position",`${i-32} 0 ${n-32}`),t.setAttribute("mixin","voxel"),e.appendChild(t)}this.el.sceneEl.appendChild(e);let i=document.createElement("a-sky");i.setAttribute("src","#sky"),this.el.sceneEl.appendChild(i)}})},function(e,t){AFRAME.registerGeometry("map",{schema:{vertices:{default:["-10 10 0","-10 -10 0","10 -10 0"]}},init:function(e){var t=new THREE.Geometry;t.vertices=e.vertices.map(function(e){var t=e.split(" ").map(function(e){return parseInt(e)});return new THREE.Vector3(t[0],t[1],t[2])}),t.computeBoundingBox(),t.faces.push(new THREE.Face3(0,1,2)),t.mergeVertices(),t.computeFaceNormals(),t.computeVertexNormals(),this.geometry=t}})},function(e,t){var i={go:(e,t)=>{var i=[[[0,0,2,0,0],[2,1,1,1,0],[0,1,1,1,0],[0,1,0,1,2],[0,0,0,2,0]],[[0,0,2,0,0],[0,1,1,1,0],[0,1,0,1,0],[2,1,0,1,2],[0,1,1,1,0],[0,1,1,1,0],[0,0,2,0,0]],[[0,0,2,0,0],[0,1,1,1,1],[0,1,1,1,0],[2,1,1,1,2],[0,1,1,1,0],[1,1,1,1,0],[1,0,2,0,0]],[[0,1,1,1,0],[2,1,1,1,0],[0,1,0,1,0],[0,1,0,1,2],[0,1,1,1,0]],[[0,0,0,0],[2,1,1,2],[0,0,0,0]],[[0,2,0],[0,1,0],[0,1,0],[0,2,0]],[[0,0,0,0,0,0,0,0],[2,1,1,1,1,1,1,2],[0,0,0,0,0,0,0,0]],[[0,2,0],[0,1,0],[0,1,0],[0,1,0],[0,1,0],[0,1,0],[0,1,0],[0,2,0]],[[0,0,0,0,2,0],[0,0,0,1,1,0],[2,1,1,1,1,0],[0,1,1,0,1,1],[0,1,0,0,1,1],[0,0,1,1,1,2],[0,1,1,0,1,0],[0,0,0,0,2,0]],[[0,0,0,2,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[2,1,1,1,1,2],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,0,1,0,0],[0,0,0,2,0,0]],[[0,0,0,0,2,0,0,0,0,0,0],[0,0,0,1,1,0,0,0,0,0,0],[0,0,0,1,1,1,0,0,0,0,0],[2,1,1,1,1,0,1,1,2,0,0],[0,0,0,1,1,0,0,0,1,0,0],[0,0,1,1,0,0,0,1,1,1,0],[0,0,1,1,0,0,0,1,1,1,0],[0,0,1,1,0,0,1,1,1,1,0],[0,1,1,1,1,1,1,1,1,1,2],[0,1,0,1,0,1,1,1,1,1,0],[0,1,1,1,0,0,0,1,1,1,0],[0,0,1,1,0,0,0,0,1,0,0],[0,0,2,0,0,0,0,0,2,0,0]],[[0,0,0,0,0,0,2,0,0,0,0],[0,0,0,1,1,0,1,0,0,0,0],[0,0,1,1,1,1,1,1,0,0,0],[0,1,1,1,1,1,1,1,1,0,0],[0,0,1,1,1,1,1,1,1,1,0],[0,1,1,1,1,1,1,1,1,1,0],[2,1,1,1,1,1,1,1,1,1,2],[0,1,1,1,1,1,1,1,1,1,0],[0,1,1,1,1,1,1,1,1,1,2],[0,1,1,1,1,1,1,1,1,1,0],[1,1,1,1,0,0,1,1,1,1,0],[1,1,1,1,0,0,1,1,1,0,0],[0,0,2,0,0,0,0,1,1,0,0]]];let n=e=>~~(Math.random()*e),r=i.length;for(let e=0;e<r;e++){let t=i[e].slice();for(let e=0;e<t.length;e++)t[e]=t[e].slice().reverse();i.push(t);let n=i[e].slice();n=n.reverse(),i.push(n);let r=t.slice();r=r.reverse(),i.push(r)}for(let e=0;e<i.length;e++){i[e].size={w:i[e][0].length,h:i[e].length},i[e].exits=[];for(let t=0;t<i[e].size.h;t++)for(let n=0;n<i[e].size.w;n++)2===i[e][t][n]&&i[e].exits.push({x:n,y:t})}var a=document.createElement("canvas");a.width=e,a.height=e;var o=a.getContext("2d");o.fillStyle="rgba(0, 0, 0, 0)",o.fillRect(0,0,e,e);let s=!0;var l=(e,t)=>{let r,a,l,c=[],u=!1,h=25;do{r=i[n(i.length)];for(var m=0;m<r.exits.length;m++){a=e.x-r.exits[m].x,l=e.y-r.exits[m].y;if(u=o.getImageData(a,l,r.size.w,r.size.h).data.every(e=>0===e))break}h--}while(h>0&&!u)return u||(r=[[1]],r.exits=[{}],a=e.x,l=e.y,m=0),o.fillStyle="#4A4",s||o.fillRect(a+r.exits[m].x||0,l+r.exits[m].y||0,1,1),o.fillStyle=s?"#A44":"#888",1===t&&(o.fillStyle="#F0F"),2===t&&(o.fillStyle="#0FF"),s=!1,r.forEach((e,t)=>{e.forEach((e,i)=>{1===e&&o.fillRect(a+i,l+t,1,1),2===e&&c.push({x:a+i,y:l+t})})}),c};let c=t,u=[{x:e/2,y:e/2}];for(let e=0;e<c;e++){let t,i=[];u.forEach((n,r)=>{e==c-1&&r==u.length-~~(u.length/3)&&(t=1),e==c-1&&r==~~(u.length/3)&&(t=2);let a=l(n,t);i=i.concat(a),t=0}),u=i}return o}};e.exports=i},function(e,t){AFRAME.registerComponent("material-texture",{schema:{color:{type:"color"},src:{type:"map"},index:{type:"int"}},init:function(){const e=this.data;var t=document.getElementById("fragment").textContent,i=document.getElementById("vertex").textContent;this.material=new THREE.ShaderMaterial({uniforms:{time:{value:0},index:{value:this.data.index},DiffuseTexture:{value:new THREE.ImageUtils.loadTexture("./lost.png")},color:{value:new THREE.Color(e.color)},spriteDimensions:{value:{x:8,y:1}},repeat:{value:{x:1,y:1}}},vertexShader:i,fragmentShader:t}),this.applyToMesh(),this.el.addEventListener("model-loaded",()=>this.applyToMesh())},update:function(){},applyToMesh:function(){const e=this.el.getObject3D("mesh");e&&(this.material.uniforms.repeat.value.x=+this.el.getAttribute("width")||1,this.material.uniforms.repeat.value.y=+this.el.getAttribute("height")||1,e.material=this.material)},tick:function(e){this.material.uniforms.time.value=e/1e3}})}]);